.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MicroMason::Docs::ReadMe 3"
.TH MicroMason::Docs::ReadMe 3 "2009-11-17" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Text::MicroMason::Docs::ReadMe \- About the MicroMason Distribution
.SH "MOTIVATION"
.IX Header "MOTIVATION"
The HTML::Mason module provides a useful syntax for dynamic template
interpretation (sometimes called embedded scripting): plain text (or
\&\s-1HTML\s0) containing occasional chunks of Perl code whose results are
interpolated into the text when the template is \*(L"executed.\*(R"
.PP
However, HTML::Mason also provides a full-featured web application
framework with numerous other functions, and there are times in which
I'd like to use the templating capability without configuring a full
Mason installation.
.PP
Thus, the Text::MicroMason module was born: it supports the core aspects
of the HTML::Mason syntax (\*(L"<%...%>\*(R" expressions, \*(L"%...\en\*(R" lines and
\&\*(L"<%perl>...</%perl>\*(R" blocks, \*(L"<& file &>\*(R" includes, \*(L"%ARGS\*(R" and 
\&\*(L"$_out\->()\*(R"), and omits the features that are web specific (like
autohandlers) or are less widely used (like \*(L"<%method>\*(R" blocks).
.PP
You may well be thinking \*(L"yet another dynamic templating module?
Sheesh!\*(R" And you'd have a good point. There certainly are a wide variety
of templating toolkits on \s-1CPAN\s0 already. (For a brief list see
Text::MicroMason::Docs::Related.)
.PP
Nonetheless, I think this module occupies a useful niche: it provides a
reasonable subset of HTML::Mason syntax in a very light-weight fashion.
In comparison to the other modules listed, MicroMason aims to be fairly
lightweight, using one eval per parse, converting the template to a
compiled subroutine reference, and requiring less than five hundred
lines of Perl code.
.PP
Although it notoriously difficult to fairly benchmark competing template
frameworks, at least some anecdotal evidence indicates that this module
performs reasonably well.
  http://use.perl.org/~hctif/journal/25211
  http://www.gtchat.de/templateengines/templateengines_en.html
.PP
It is also highly modular, allowing users to select and enable the
combination of features they desire. Automatic caching, safe
compartments, post-processing and other features are available as mixin
classes that are loaded on demand.
.PP
I've recently added mixin classes that emulate the template syntax used
by Apache::ASP, Embperl, HTML::Template, \s-1PLP\s0, Text::Template, and
Text::QuickTemplate.
.SH "DISTRIBUTION STATUS"
.IX Header "DISTRIBUTION STATUS"
This is version 2.07 of Text::MicroMason. 
.PP
This module has been available on \s-1CPAN\s0 for over six years. 
.PP
If you encounter any problems, please inform the current maintainer and
I'll endeavor to patch them promptly.
.PP
This module's \s-1CPAN\s0 registration should read:
.PP
.Vb 4
\&  Name            DSLIP  Description
\&  \-\-\-\-\-\-\-\-\-\-\-\-\-\-  \-\-\-\-\-  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&  Text::          Group 11: Text Processing
\&  ::MicroMason    Rdpfp  Simplified HTML::Mason Templating
.Ve
.PP
Please see the \s-1CPAN\s0 Testers report for a sample of systems this module
has been tested successfully on:
.PP
.Vb 1
\& http://testers.cpan.org/show/Text\-MicroMason.html
.Ve
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
The required version of perl has been increased to 5.6 as of version
1.993_01. It should work with on any standard platform which runs Perl.
.PP
Although almost all currently existing features work on versions of Perl
reaching back to 5.0, it will benefit Text::MicroMason in the long run
if supporting legacy versions of Perl was not necessary. Please contact
the new maintainer to gripe, if you absolutely need Text::MicroMason on
an older version of Perl.  
.PP
There is one pre-requisite module not included with the core
distribution which must be installed from \s-1CPAN:\s0
Class::MixinFactory.
.PP
If you want to use the Text::Template compatibility mode, you will also
need to install Text::Balanced.
.PP
Various other mixins included in MicroMason require other modules in
order to be useful, but MicroMason installs and tests without them. (I
should be more specific here in the future.)
.SH "INSTALLATION"
.IX Header "INSTALLATION"
You should be able to install this module using the \s-1CPAN\s0 shell interface:
.PP
.Vb 1
\&  perl \-MCPAN \-e \(aqinstall Text::MicroMason\(aq
.Ve
.PP
Alternately, you may retrieve this package from \s-1CPAN\s0
(\f(CW\*(C`http://search.cpan.org/~ferrency/\*(C'\fR).
.PP
After downloading the distribution, follow the normal procedure to
unpack and install it, using the commands shown below or their local
equivalents on your system:
.PP
.Vb 4
\&  tar xzf Text\-MicroMason\-*.tar.gz
\&  cd Text\-MicroMason\-*
\&  perl Makefile.PL
\&  make test && sudo make install
.Ve
.SH "SUPPORT"
.IX Header "SUPPORT"
If you have questions or feedback about this module, please feel free to
contact the maintainer or original author at the e\-mail address listed
below. Although there is no formal support program, I do attempt to
answer email promptly.
.PP
I would be particularly interested in any suggestions towards
improving the documentation, correcting any Perl-version or platform
dependencies, as well as general feedback and suggested additions.
.PP
Bug reports that contain a failing test case are greatly appreciated,
and suggested patches will be promptly considered for inclusion in
future releases.
.PP
You can report bugs via the \s-1CPAN\s0 web tracking system, or send mail 
to \f(CW\*(C`bug\-Text\-MicroMason#rt.cpan.org\*(C'\fR, replacing \f(CW\*(C`#\*(C'\fR with \f(CW\*(C`@\*(C'\fR.
.PP
.Vb 1
\&  http://rt.cpan.org/NoAuth/Bugs.html?Dist=Text\-MicroMason
.Ve
.SH "COMMUNITY"
.IX Header "COMMUNITY"
If you've found this module useful or have feedback about your
experience with it, consider sharing your opinion with other Perl users
by posting your comment to \s-1CPAN\s0's ratings system.
.PP
.Vb 1
\&  http://cpanratings.perl.org/rate/?distribution=Text\-MicroMason
.Ve
.PP
For more general discussion, you may wish to post a message on the
CPAN::Forum, on PerlMonks, or on the comp.lang.perl.modules newsgroup.
These are not all monitored by the current maintainer, so if you want a
response, please contact me directly.
.PP
.Vb 3
\&  http://www.cpanforum.com/dist/Text\-MicroMason
\&  http://perlmonks.org/?node=Seekers%20of%20Perl%20Wisdom
\&  http://groups.google.com/groups?group=comp.lang.perl.modules
.Ve
.SH "THANKS"
.IX Header "THANKS"
My sincere thanks to the following people for their feedback and
contributions:
.PP
.Vb 11
\&  Pascal Barbedor
\&  Mark Hampton
\&  Philip King
\&  Daniel J. Wright
\&  William Kern
\&  Tommi Maekitalo
\&  Alan Ferrency
\&  Jonas Alves
\&  Alexander
\&  Matthew Simon Cavalletto
\&  Jon Warbrick
.Ve
.SH "SOURCE MATERIAL"
.IX Header "SOURCE MATERIAL"
Portions based on HTML::Mason by Jonathan Swartz. 
.PP
Portions based on Embperl by Gerald Richter.
.PP
Portions based on HTML::Template by Sam Tregar.
.PP
Portions based on \s-1PLP\s0 by Juerd Waalboer.
.PP
Portions based on Text::Template by Mark Jason Dominus.
.PP
Portions based on Text::QuickTemplate by Eric J. Roode.
.SH "AUTHOR"
.IX Header "AUTHOR"
Developed by Matthew Simon Cavalletto at Evolution Softworks.  You may
contact the author directly at \f(CW\*(C`evo#cpan.org\*(C'\fR or
\&\f(CW\*(C`simonm#cavalletto.org\*(C'\fR, replacing \f(CW\*(C`#\*(C'\fR with \f(CW\*(C`@\*(C'\fR.
.PP
Currently maintained by Alan Ferrency <ferrency#cpan.org> at pair
Networks, Inc.
.SH "LICENSE"
.IX Header "LICENSE"
Copyright 2002, 2003, 2004, 2005 Matthew Simon Cavalletto. 
.PP
Portions copyright 2001 Evolution Online Systems, Inc.
.PP
You may use, modify, and distribute this software under the same
terms as Perl.
